import openai

def generate_npc(api_key, occupation):
    client = openai.OpenAI(api_key=api_key)

    prompt = f"""
    Cr√©e un PNJ d√©taill√© pour une campagne D&D en respectant les r√®gles de la 5e √©dition.
    Adapte sa classe en fonction de son occupation : {occupation}. M√©lange deux classes ou cr√©e une nouvelle classe si n√©cessaire, en respectant les m√©caniques D&D 5E.

    üõ°Ô∏è **PNJ G√©n√©r√©**

    **Nom** : [G√©n√©r√©]
    **Race** : [G√©n√©r√©e selon l‚Äôunivers]
    **Classe** : [Adapt√©e selon l‚Äôoccupation]
    **Niveau** : [Appropri√©]

    üõ°Ô∏è **Statistiques :**

    | Statistique | Valeur | Modificateur |
    |------------|--------|-------------|
    | **FOR**    | X      | X           |
    | **DEX**    | X      | X           |
    | **CON**    | X      | X           |
    | **INT**    | X      | X           |
    | **SAG**    | X      | X           |
    | **CHA**    | X      | X           |

    üìñ **Comp√©tences & Modificateurs :**

    | Comp√©tence et Modificateur | Comp√©tence et Modificateur | Comp√©tence et Modificateur |
    |---------------------------|---------------------------|---------------------------|
    | Acrobaties (DEX) : X     | Arcanes (INT) : X        | Athl√©tisme (FOR) : X     |
    | Discr√©tion (DEX) : X     | Dressage (SAG) : X       | Escamotage (DEX) : X     |
    | Histoire (INT) : X       | Intimidation (CHA) : X   | Investigation (INT) : X  |
    | M√©decine (SAG) : X       | Nature (INT) : X        | Perception (SAG) : X     |
    | Persuasion (CHA) : X     | Religion (INT) : X      | Repr√©sentation (CHA) : X |
    | Supercherie (CHA) : X    | Survie (SAG) : X        |                           |

    üî• **Sorts connus / Attaques connues (en fonction de la / des classes du NPC) :**

    **Sorts (si applicable) :**
    - **Sorts mineurs :**
      - [Liste]
    - **Niveau 1 ou plus :**
      - [Liste] (X / Repos Long ou Repos Court selon la classe)

    **Attaques (si applicable) :**
    - Armes ou autres (pr√©cision) +X : XdX d√©g√¢ts de (type de d√©g√¢ts)

    ‚öîÔ∏è **√âquipement et objets magiques :**
    - [Armures, objets notables]

    üé≠ **Personnalit√© et r√¥le dans l‚Äôunivers :**
    - **Caract√®re et motivations** : [Traits, ambitions et croyances]
    - **Phrase typique ou tic de langage** : [Exemple]
    - **Secrets et conflits internes** : [√âl√©ment cach√© int√©ressant pour les joueurs]

    üìú **Histoire et importance en jeu :**
    - **Biographie courte** : [Son pass√©]
    - **Lien avec la campagne** : [Pourquoi les joueurs pourraient l‚Äôapprocher]

    
    üó£Ô∏è **Description √† lire aux joueurs :**
    Un texte immersif que le MJ peut lire √† voix haute, d√©crivant l'apparence, le comportement et l'aura g√©n√©rale du PNJ lorsqu'il est rencontr√© par les joueurs.


    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": prompt}]
    )

    return response.choices[0].message.content.strip()

def generate_location(api_key, prompt=None):
    """Generates a town, shop, or dungeon with optional customization."""
    client = openai.OpenAI(api_key=api_key)
    messages = [
        {"role": "system", "content": "You are an expert D&D worldbuilder."},
        {"role": "user", "content": prompt if prompt else "Generate a detailed D&D town description with notable NPCs and shops."}
    ]
    response = client.chat.completions.create(model="gpt-4o", messages=messages)
    return response.choices[0].message.content.strip()

def modify_campaign_chapter(existing_text, api_key, prompt=None):
    """Modifies a campaign chapter with optional custom changes."""
    client = openai.OpenAI(api_key=api_key)
    messages = [
        {"role": "system", "content": "You are a skilled D&D campaign editor."},
        {"role": "user", "content": f"{prompt if prompt else 'Rewrite this chapter to match past events and world changes:'}\n\n{existing_text}"}
    ]
    response = client.chat.completions.create(model="gpt-4o", messages=messages)
    return response.choices[0].message.content.strip()

