import openai

def generate_npc(api_key, occupation):
    client = openai.OpenAI(api_key=api_key)

    prompt = f"""
    Cr√©e un PNJ d√©taill√© pour une campagne D&D en respectant les r√®gles de la 5e √©dition.
    Adapte sa classe en fonction de son occupation : {occupation}. Si la classe n'est pas naturellement magique, ne lui attribue pas de sorts.

    üõ°Ô∏è **PNJ G√©n√©r√©**

    **Nom** : [G√©n√©r√©]
    **Race** : [G√©n√©r√©e selon l‚Äôunivers]
    **Classe** : [Adapt√©e selon l‚Äôoccupation]
    **Niveau** : [Appropri√©]

    üõ°Ô∏è **Statistiques :**

    | Statistique | Valeur | Modificateur |
    |------------|--------|-------------|
    | **FOR**    | X      | X           |
    | **DEX**    | X      | X           |
    | **CON**    | X      | X           |
    | **INT**    | X      | X           |
    | **SAG**    | X      | X           |
    | **CHA**    | X      | X           |

    üìñ **Comp√©tences & Modificateurs :**

    | Comp√©tence et Modificateur | Comp√©tence et Modificateur | Comp√©tence et Modificateur |
    |---------------------------|---------------------------|---------------------------|
    | Acrobaties (DEX) : X     | Arcanes (INT) : X        | Athl√©tisme (FOR) : X     |
    | Discr√©tion (DEX) : X     | Dressage (SAG) : X       | Escamotage (DEX) : X     |
    | Histoire (INT) : X       | Intimidation (CHA) : X   | Investigation (INT) : X  |
    | M√©decine (SAG) : X       | Nature (INT) : X        | Perception (SAG) : X     |
    | Persuasion (CHA) : X     | Religion (INT) : X      | Repr√©sentation (CHA) : X |
    | Supercherie (CHA) : X    | Survie (SAG) : X        |                           |

    üèÖ **Capacit√©s et Traits :**
    - [Capacit√©s sp√©ciales li√©es √† la classe et au niveau]
    - [Traits raciaux sp√©cifiques]
    - [Talents ou capacit√©s uniques du PNJ]

    üî• **Sorts connus / Attaques connues (en fonction de la / des classes du NPC) :**

    **Sorts (si applicable, uniquement pour classes magiques) :**
    - **Sorts mineurs :**
      - [Liste]
    - **Niveau 1 ou plus :**
      - [Liste] (X / Repos Long ou Repos Court selon la classe)

    **Attaques (si applicable) :**
    - Armes ou autres (pr√©cision) +X : XdX d√©g√¢ts de (type de d√©g√¢ts)

    ‚öîÔ∏è **√âquipement et objets magiques :**
    - [Armures, objets notables, objets magiques (si applicable)]

    üé≠ **Personnalit√© et r√¥le dans l‚Äôunivers :**
    - **Caract√®re et motivations** : [Traits, ambitions et croyances]
    - **Phrase typique ou tic de langage** : [Exemple]
    - **Secrets et conflits internes** : [√âl√©ment cach√© int√©ressant pour les joueurs]

    üìú **Histoire et importance en jeu :**
    - **Biographie courte** : [Son pass√©]
    - **Lien avec la campagne** : [Pourquoi les joueurs pourraient l‚Äôapprocher]

    üó£Ô∏è **Description √† lire aux joueurs :**
    "Un texte immersif que le MJ peut lire √† voix haute, d√©crivant l'apparence, le comportement et l'aura g√©n√©rale du PNJ lorsqu'il est rencontr√© par les joueurs."
    """

    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": prompt}]
    )

    return response.choices[0].message.content.strip()

def generate_shop(api_key, shop_type="General Store", custom_prompt=None):
    """Generates a detailed D&D shop description, including inventory, owner, security measures, and lore."""

    # List of allowed shop types
    allowed_shop_types = [
        "General Store", "Blacksmith", "Alchemy Shop", "Magic Shop", "Tavern",
        "Jewelry Store", "Weapon Shop", "Armorer", "Fletcher"
    ]

    # Validate shop type
    if shop_type not in allowed_shop_types:
        return f"‚ùå Erreur : Le type de boutique '{shop_type}' n'est pas valide. Choisissez parmi {', '.join(allowed_shop_types)}."

    client = openai.OpenAI(api_key=api_key)

    prompt = f"""
    Cr√©e une boutique immersive pour une campagne D&D en respectant les r√®gles de la 5e √©dition.
    D√©cris les √©l√©ments suivants :

    **üìú Nom du magasin** : Choisis un nom unique et th√©matique en fonction du type de boutique ({shop_type}).

    **üë§ Propri√©taire** : D√©cris son nom, sa race et sa personnalit√©.

    üó£Ô∏è **Description √† lire aux joueurs :**
    "Un texte immersif que le MJ peut lire √† voix haute, d√©crivant l'apparence, le comportement et l'aura g√©n√©rale du PNJ lorsqu'il est rencontr√© par les joueurs."

    ## üõçÔ∏è **Inventaire Principal (D&D 5e)** :
    - Liste **5 √† 10 objets**, incluant des **objets magiques et non magiques** correspondant au type de boutique ({shop_type}).
    - Utilise les objets **officiels de D&D 5e** et inclut leurs **prix standards**.
    - Pour chaque objet, fournis **une description d√©taill√©e**, en pr√©cisant ses effets et caract√©ristiques.

   ## üîé **Ce qui rend ce magasin int√©ressant** :
    - Choisis **un √©l√©ment √©trange, une caract√©ristique unique ou une anomalie** propre √† cette boutique (ex: une horloge sans aiguilles qui fonctionne malgr√© tout, un client qui semble toujours √™tre l√† quelle que soit l'heure de la journ√©e, un objet qui appara√Æt diff√©remment selon la personne qui le regarde).
    - D√©cris **comment les joueurs le remarquent imm√©diatement** (ex: une sensation de d√©j√†-vu, une ombre qui ne correspond pas, une impression de murmure √† la limite de l‚Äôaudible).
    - Fournis **une explication plausible ou myst√©rieuse** donn√©e par le propri√©taire (ex: "C'est un vieux m√©canisme elfique" ou "Personne ne sait vraiment pourquoi, mais cela ne semble pas dangereux...").
    - Ajoute **une cons√©quence possible en jeu** si les joueurs interagissent avec cet √©l√©ment (ex: l'objet leur murmure un secret, la boutique semble l√©g√®rement changer √† leur prochaine visite, le propri√©taire leur demande de ne plus poser de questions).

    ## üîê **Mesures de s√©curit√© et r√©actions en cas de vol** :
    - Pr√©cise **les protections contre le vol** (runes magiques, golems de garde, sorts...) et, si applicable, en d√©crivant les jets de sauvegarde n√©cessaire et les d√©gats.
    - D√©cris **comment le propri√©taire r√©agirait** si un vol √©tait tent√©.

    {f"- Instructions sp√©cifiques : {custom_prompt}" if custom_prompt else ""}
    """

    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": prompt}]
    )

    return response.choices[0].message.content.strip()

def modify_campaign_chapter(existing_text, api_key, prompt=None):
    """Modifies a campaign chapter with optional custom changes."""
    client = openai.OpenAI(api_key=api_key)
    messages = [
        {"role": "system", "content": "You are a skilled D&D campaign editor."},
        {"role": "user", "content": f"{prompt if prompt else 'Rewrite this chapter to match past events and world changes:'}\n\n{existing_text}"}
    ]
    response = client.chat.completions.create(model="gpt-4o", messages=messages)
    return response.choices[0].message.content.strip()

